// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+alt+s",
        "command": "workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+k ctrl+shift+s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+pageup",
        "command": "jupyter.moveCellsDown",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+oem_1 d",
        "command": "-jupyter.moveCellsDown",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "win+t win+l",
        "command": "-phpunit.rerun",
        "when": "editorTextFocus && editorLangId == 'php'"
    },
    {
        "key": "f2",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f3",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "f11",
        "command": "-workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "f11",
        "command": "-extension.node-debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
    },
    {
        "key": "f11",
        "command": "-php.debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'php'"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "-extension.node-debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
    },
    {
        "key": "f10",
        "command": "-php.debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'php'"
    },
    {
        "key": "f10",
        "command": "-jupyter.runByLine",
        "when": "!jupyter.notebookeditor.debuggingInProgress && !jupyter.notebookeditor.runByLineInProgress && !jupyter.webExtension && notebookKernelCount > 0"
    },
    {
        "key": "f10",
        "command": "-jupyter.runByLineNext",
        "when": "jupyter.notebookeditor.runByLineInProgress && !jupyter.webExtension"
    },
    {
        "key": "shift+f10",
        "command": "-editor.action.showContextMenu",
        "when": "textInputFocus"
    },
    {
        "key": "f1",
        "command": "phpunit.run-test-at-cursor",
        "when": "editorTextFocus && editorLangId == 'php'"
    },
    {
        "key": "win+t win+t",
        "command": "-phpunit.run-test-at-cursor",
        "when": "editorTextFocus && editorLangId == 'php'"
    },
    {
        "key": "win+t win+f",
        "command": "-phpunit.run-file",
        "when": "editorTextFocus && editorLangId == 'php'"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.focus"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.openRecent",
        "when": "activeEditor"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "alt+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.nextEditor",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.previousEditor",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "<space>+f",
        "command": "workbench.action.quickOpen",
    },
    {
        "key": "alt+n",
        "command": "phpCreateClass.generateClassCode",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+d",
        "command": "-extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
    },
    {
        "key": "u",
        "command": "undo",
        "when": "editorTextFocus && vim.active && vim.mode == 'Visual'"
    },
    {
        "key": "alt+a",
        "command": "editor.emmet.action.wrapWithAbbreviation"
    },
    {
        "key": "shift+5",
        "command": "editor.emmet.action.matchTag",
        "when": "editorTextFocus && vim.active && vim.mode == 'Visual'"
    },
    {
        "key": "alt+t",
        "command": "editor.emmet.action.updateTag"
    },
    {
        "key": "shift shift",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "alt alt",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "alt+`",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+1",
        "command": "workbench.view.explorer"
    },
    {
        "key": "alt+2",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "alt+2",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "alt+3",
        "command": "workbench.view.scm",
    },
    {
        "key": "alt+3",
        "command": "-workbench.view.scm",
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    // run unit tests
    {
        "key": "f1",
        "command": "better-phpunit.run",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert' && editorLangId == php"
    },
    {
        "key": "f1",
        "command": "test-explorer.run-test-at-cursor",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert' && editorLangId == typescript"
    },
    {
        "key": "f2",
        "command": "better-phpunit.run-previous",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "f3",
        "command": "better-phpunit.run-file",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    {
        "key": "f4",
        "command": "better-phpunit.run-suite",
        "when": "editorTextFocus && vim.active && vim.mode != 'Insert'"
    },
    // end run unit tests
    {
        "key": "escape",
        "command": "workbench.action.closePanel",
        "when": "view.terminal.visible"
    },
    // multi line cursor
    { 
        "key": "escape",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus && vim.active && vim.mode == 'Normal'" 
    },
]
